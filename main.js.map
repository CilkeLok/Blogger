{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blogger.ts","webpack:///./src/app/bloggers.actions.ts","webpack:///./src/app/bloggers.reducers.ts","webpack:///./src/app/components/add-blogger/add-blogger.component.css","webpack:///./src/app/components/add-blogger/add-blogger.component.html","webpack:///./src/app/components/add-blogger/add-blogger.component.ts","webpack:///./src/app/components/bloggers/blogger/blogger.component.css","webpack:///./src/app/components/bloggers/blogger/blogger.component.html","webpack:///./src/app/components/bloggers/blogger/blogger.component.ts","webpack:///./src/app/components/bloggers/bloggers.component.css","webpack:///./src/app/components/bloggers/bloggers.component.html","webpack:///./src/app/components/bloggers/bloggers.component.ts","webpack:///./src/app/components/main/main.component.css","webpack:///./src/app/components/main/main.component.html","webpack:///./src/app/components/main/main.component.ts","webpack:///./src/app/components/page-not-found/page-not-found.component.css","webpack:///./src/app/components/page-not-found/page-not-found.component.html","webpack:///./src/app/components/page-not-found/page-not-found.component.ts","webpack:///./src/app/components/post/post.component.css","webpack:///./src/app/components/post/post.component.html","webpack:///./src/app/components/post/post.component.ts","webpack:///./src/app/components/posts/posts.component.css","webpack:///./src/app/components/posts/posts.component.html","webpack:///./src/app/components/posts/posts.component.ts","webpack:///./src/app/components/sign-in/sign-in.component.css","webpack:///./src/app/components/sign-in/sign-in.component.html","webpack:///./src/app/components/sign-in/sign-in.component.ts","webpack:///./src/app/components/sign-up/sign-up.component.css","webpack:///./src/app/components/sign-up/sign-up.component.html","webpack:///./src/app/components/sign-up/sign-up.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/bloggers.service.ts","webpack:///./src/app/services/guard.service.ts","webpack:///./src/app/services/post.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { PostComponent } from './../components/post/post.component';\nimport { GuardService } from './../services/guard.service';\nimport { SignUpComponent } from './../components/sign-up/sign-up.component';\nimport { SignInComponent } from './../components/sign-in/sign-in.component';\nimport { PostsComponent } from './../components/posts/posts.component';\nimport { PageNotFoundComponent } from './../components/page-not-found/page-not-found.component';\nimport { MainComponent } from './../components/main/main.component';\nimport { NgModule } from '@angular/core';\nimport { Routes,RouterModule } from '@angular/router';\n\n\nconst appRoutes:Routes = [\n  {path:'',component:MainComponent,canActivate:[GuardService]},\n  {path:'posts',component:PostsComponent,canActivate:[GuardService],children:[\n    {path:':id',component:PostComponent}\n  ]},\n  {path:'signup',component:SignUpComponent},\n  {path:'signin',component:SignInComponent},\n  {path:'pagenotfound',component:PageNotFoundComponent},\n  {path:'**', redirectTo:'/pagenotfound'}\n];\n\n@NgModule({\n  imports: [\n   RouterModule.forRoot(appRoutes)\n  ],\n  exports: [RouterModule]\n  \n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark fixed-top\\\">\\n    <div class=\\\"container\\\">\\n        <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Blogger.com</a>\\n        <button class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar-collapse\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbar-collapse\\\">\\n            <ul class=\\\"navbar-nav ml-auto\\\">\\n                <ng-template [ngIf]=\\\"authService.authenticated()\\\">\\n                    <li class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"/\\\" class=\\\"nav-link\\\">Home</a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"/posts\\\" class=\\\"nav-link\\\">Posts</a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" (click)=\\\"signOut()\\\">SignOut</a>\\n                    </li>\\n                </ng-template>\\n                <ng-template [ngIf]=\\\"!authService.authenticated()\\\">\\n                    <li class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"/signin\\\" class=\\\"nav-link\\\">SignIn</a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"/signup\\\" class=\\\"nav-link\\\">SignUp</a>\\n                    </li>\\n                </ng-template>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\\n<footer id=\\\"main-footer\\\" class=\\\"bg-dark\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col text-center text-white\\\">\\n                <div class=\\\"py-4\\\">\\n                    <h1 class=\\\"h3\\\">Blogger.com</h1>\\n                    <p>Copyright &copy; 2018</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</footer>\"","import { AuthService } from './services/auth.service';\nimport { Component,OnInit } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  constructor(private authService:AuthService,\n     private router:Router) { }\n\n     ngOnInit() {\n       firebase.initializeApp({\n        apiKey: \"AIzaSyASLap0nTNbASP8hjGH2LQaAJvvZfWJxZ8\",\n        authDomain: \"bloggers-4a18e.firebaseapp.com\",\n        databaseURL: \"https://bloggers-4a18e.firebaseio.com\"\n       });\n     }\n     signOut() {\n       this.authService.signout();\n       this.router.navigate(['/signin'])\n     }\n}\n","import { PostService } from './services/post.service';\nimport { GuardService } from './services/guard.service';\nimport { AuthService } from './services/auth.service';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\n\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './components/main/main.component';\nimport { BloggersComponent } from './components/bloggers/bloggers.component';\nimport { BloggerComponent } from './components/bloggers/blogger/blogger.component';\nimport { AddBloggerComponent } from './components/add-blogger/add-blogger.component';\nimport { PostsComponent } from './components/posts/posts.component';\nimport { PostComponent } from './components/post/post.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { BloggersService } from './services/bloggers.service';\nimport { bloggersReducer } from './bloggers.reducers';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    BloggersComponent,\n    BloggerComponent,\n    AddBloggerComponent,\n    PostsComponent,\n    PostComponent,\n    SignInComponent,\n    SignUpComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot({bloggers:bloggersReducer}),\n    BrowserAnimationsModule\n\n\n  ],\n  providers: [BloggersService,AuthService,GuardService,PostService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Blogger {\r\n    name:string;\r\n    email:string;\r\n    about:string;\r\n\r\n\r\n    constructor ( name:string,email:string,about:string) {\r\n    this.name=name;\r\n    this.email=email;\r\n    this.about=about;\r\n    }\r\n} ","import { Blogger } from './blogger';\r\nimport { Action } from '@ngrx/store';\r\n\r\nexport const ADD_BLOGGER='ADD_BLOGGER';\r\nexport const DELETE_BLOGGER='DELETE_BLOGGER';\r\nexport const EDIT_BLOGGER='EDIT_BLOGGER';\r\nexport const ADD_BLOGGERS='ADD_BLOGGERS';\r\n\r\nexport class AddBlogger implements Action {\r\n    readonly type = ADD_BLOGGER;\r\n\r\n    constructor (public payload:Blogger){}\r\n}\r\n\r\nexport class EditBlogger implements Action {\r\n    readonly type = EDIT_BLOGGER;\r\n    constructor(public payload:{index:number , blogger:Blogger}){}\r\n}\r\n\r\nexport class DeleteBlogger implements Action {\r\n    readonly type = DELETE_BLOGGER;\r\n    constructor(public payload:number){}\r\n}\r\n\r\nexport class AddBloggers implements Action {\r\n    readonly type = ADD_BLOGGERS;\r\n    constructor(public payload:Blogger[]) {}\r\n}\r\n\r\nexport type Actions = AddBlogger | DeleteBlogger | EditBlogger | AddBloggers;","import * as BloggersActions from './bloggers.actions';\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    bloggers:[\r\n\r\n    ]\r\n}\r\n\r\nexport function bloggersReducer(state=initialState,action:BloggersActions.Actions)  {\r\nswitch (action.type) {\r\n    \r\n    case BloggersActions.ADD_BLOGGER:\r\n    return {\r\n        ...state,\r\n        bloggers:[...state.bloggers,action.payload]\r\n    };\r\n\r\n\r\n    case BloggersActions.DELETE_BLOGGER:\r\n    const oldBloggers = [...state.bloggers];\r\n    oldBloggers.splice(action.payload,1)\r\n    return {\r\n        ...state,\r\n        bloggers:oldBloggers\r\n\r\n    };\r\n\r\n    case BloggersActions.EDIT_BLOGGER:\r\n    const beforeEditingBloggers = [...state.bloggers];\r\n    beforeEditingBloggers[action.payload.index] = action.payload.blogger;\r\n    return {\r\n        ...state,\r\n        bloggers:beforeEditingBloggers\r\n    };\r\n    case BloggersActions.ADD_BLOGGERS:\r\n    return {...state,\r\n            bloggers:action.payload};\r\n\r\n    default: return state;\r\n}\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row m-3 bg-light border\\\">\\n    <div class=\\\"col-md-8\\\">\\n        <h1>Bloggers job</h1>\\n        <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Rem omnis nam cumque assumenda iure repellat.</p>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card text-center bg-success text-white mb-3 m-auto\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3>Add New Blogger</h3>\\n                <h1 *ngIf=\\\"(bloggersState | async).bloggers?.length>0;else noBloggers\\\" class=\\\"display-4\\\">\\n                    <i class=\\\"fa fa-user-plus\\\"></i>{{ (bloggersState | async).bloggers.length }}\\n                </h1>\\n                <a href=\\\"#\\\" class=\\\"btn btn-outline-light btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addblogger\\\">Add blogger</a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #noBloggers>\\n    <h1 class=\\\"display-4\\\">\\n        <i class=\\\"fa fa-user-plus\\\"></i>0\\n    </h1>\\n</ng-template>\\n<div class=\\\"modal fade\\\" id=\\\"addblogger\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header bg-success text-white\\\">\\n                <h5 class=\\\"modal-title\\\">Add New Blogger</h5>\\n                <button class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n        <span>&times;</span>\\n      </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <form #f=\\\"ngForm\\\" id=\\\"addForm\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"name\\\">Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" ngModel required name=\\\"name\\\" #nameBlogger=\\\"ngModel\\\">\\n                        <span class=\\\"help-block text-danger\\\" *ngIf=\\\"!nameBlogger.valid && nameBlogger.touched\\\">You must insert Name\\n          </span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"email\\\">Email</label>\\n                        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" ngModel email=\\\"true\\\" required name=\\\"email\\\" #emailBlogger=\\\"ngModel\\\">\\n                        <span class=\\\"help-block text-danger\\\" *ngIf=\\\"!emailBlogger.valid && emailBlogger.touched\\\">You must insert Email\\n          </span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"about\\\">About</label>\\n                        <textarea name=\\\"about\\\" class=\\\"form-control\\\" rows=\\\"5\\\" value=\\\"About blogger\\\" ngModel></textarea>\\n                    </div>\\n                </form>\\n                <div class=\\\"modal-footer\\\">\\n                    <button class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button (click)=\\\"addBlogger()\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" [disabled]=!f.valid>Add</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { BloggersService } from '../../services/bloggers.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Blogger } from '../../blogger';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport * as  BloggersAction from './../../bloggers.actions';\n\n\n@Component({\n  selector: 'app-add-blogger',\n  templateUrl: './add-blogger.component.html',\n  styleUrls: ['./add-blogger.component.css']\n})\n\nexport class AddBloggerComponent implements OnInit {\n \n    \n  \n  bloggersState: Observable<{bloggers:Blogger[]}>;\n  @ViewChild('f')form:NgForm;\n   \n\n  constructor(private bloggersService:BloggersService,\n              private store:Store<{bloggers: {bloggers:Blogger[]}}>) { }\n\n  \n  \n  \n\n  ngOnInit() {\n    this.bloggersState = this.store.select('bloggers');\n     }\n\n  addBlogger(form:NgForm){\n        this.store.dispatch(new BloggersAction.AddBlogger(\n            new Blogger(this.form.value.name,this.form.value.email,this.form.value.about)));\n            this.bloggersState.subscribe(\n            (blog)=>{\n            this.bloggersService.saveBlogger(blog.bloggers).subscribe();\n          \n        }\n\n      );\n      \n      this.form.reset();\n     \n      \n    \n  }\n\n\n \n}\n","module.exports = \"i {\\r\\n    color: black;\\r\\n    font-size: 25px;\\r\\n}\"","module.exports = \"<div class=\\\"card m-3\\\">\\n    <div class=\\\"card-header\\\">\\n        <h3 class=\\\"p-3\\\">{{ blogger.name }}</h3>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <h5 class=\\\"text-muted p-3\\\">{{ blogger.email }}</h5>\\n        <p class=\\\"p-3\\\">{{ blogger.about }}</p>\\n        <div class=\\\"d-flex flex-row justify-content-center\\\">\\n            <div class=\\\"p-4\\\">\\n                <a href=\\\"https://facebook.com/\\\">\\n                    <i class=\\\"fa fa-facebook\\\"></i>\\n                </a>\\n            </div>\\n            <div class=\\\"p-4\\\">\\n                <a href=\\\"https://twitter.com/twitter?lang=eng\\\">\\n                    <i class=\\\"fa fa-twitter\\\"></i>\\n                </a>\\n            </div>\\n            <div class=\\\"p-4\\\">\\n                <a href=\\\"https://instagram.com/\\\">\\n                    <i class=\\\"fa fa-instagram\\\"></i>\\n                </a>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card-footer\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <button class=\\\"btn btn-block btn-warning\\\" data-toggle=\\\"modal\\\" data-target=\\\"#changeblogger\\\" (click)=\\\"toggleEdit()\\\">Change</button>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <button class=\\\"btn btn-block btn-danger\\\" (click)=\\\"deleteBlogger()\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal fade\\\" id=\\\"changeblogger\\\" data-backdrop=\\\"static\\\" *ngIf=\\\"editing\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header bg-warning text-white\\\">\\n                <h5 class=\\\"modal-title\\\">Change Blogger</h5>\\n                <button class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n          <span>&times;</span>\\n        </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <form #f=\\\"ngForm\\\" id=\\\"changeForm\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"name\\\">Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"blogger.name\\\" required name=\\\"name\\\" #nameBlogger=\\\"ngModel\\\">\\n                        <span class=\\\" help-block text-danger \\\" *ngIf=\\\"!nameBlogger.valid && name.Blogger.touched \\\">You must insert name</span>\\n                    </div>\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"email \\\">Email</label>\\n                        <input type=\\\"email \\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"blogger.email\\\" required email name=\\\"email\\\" #emailBlogger=\\\"ngModel\\\">\\n                        <span class=\\\"help-block text-danger \\\" *ngIf=\\\"!emailBlogger.valid && emailBlogger.touched \\\">You must insert Email</span>\\n                    </div>\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"about \\\">About Blogger</label>\\n                        <textarea name=\\\"about\\\" class=\\\"form-control\\\" rows=\\\"5\\\" value=\\\"About blogger\\\" [(ngModel)]=\\\"blogger.about\\\"></textarea>\\n                    </div>\\n                </form>\\n                <div class=\\\"modal-footer\\\">\\n                    <button class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"toggleEdit()\\\">Close</button>\\n                    <button (click)=\\\"changeBlogger(f); \\\" type=\\\"submit\\\" class=\\\"btn btn-warrning\\\" data-dismiss=\\\"modal\\\" [disabled]=!f.valid>Finish Editing</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { NgForm } from '@angular/forms';\nimport { Store,select } from '@ngrx/store';\nimport { BloggersService } from './../../../services/bloggers.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Blogger } from  './../../../blogger';\nimport { Observable } from 'rxjs';\nimport * as  BloggersAction from './../../../bloggers.actions';\n\n\n@Component({\n  selector: 'app-blogger',\n  templateUrl: './blogger.component.html',\n  styleUrls: ['./blogger.component.css']\n})\nexport class BloggerComponent implements OnInit {\n\n  @Input() blogger:Blogger;\n  @Input() index:number;\n  modalIndex:number;\n  form:NgForm;\n  editing:boolean=false;\n  \n\n\n \n  \n  bloggersState: Observable<{ bloggers:Blogger[] }>;\n\n  constructor(private bloggersService:BloggersService,\n              private store:Store<{bloggers:{ bloggers:Blogger[] } } > ) { }\n\n  ngOnInit() {\n    this.bloggersState = this.store.select('bloggers');\n    this.modalIndex=this.index;\n    \n    \n  }\n\n  toggleEdit(){\n    this.editing=!this.editing;\n    this.index=this.modalIndex;\n  }\n\n  changeBlogger(form:NgForm){\n    this.store.dispatch(new BloggersAction.\n    EditBlogger({index:this.index,\n    blogger: new Blogger(form.value.name,form.value.email,form.value.about)}));\n      this.bloggersState.subscribe(\n      (bloggers) =>\n      {\n        this.bloggersService.saveBlogger(bloggers.bloggers).subscribe();\n      }\n    );\n    form.reset();\n    this.editing=!this.editing;\n    \n  }\n\n  deleteBlogger(){\n    this.store.dispatch(new BloggersAction.DeleteBlogger(this.index));\n    this.bloggersState.subscribe(\n      (bloggers)=>\n      {\n        this.bloggersService.saveBlogger(bloggers.bloggers).subscribe();\n      }\n    )\n  }\n}\n\n \n\n\n\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <app-blogger class=\\\"col-md-6\\\" [blogger]=\\\"blogger\\\" [index]=\\\"i\\\" *ngFor=\\\"let blogger of (bloggersState | async).bloggers;let i=index\\\">\\n    </app-blogger>\\n</div>\\n\\n<app-add-blogger></app-add-blogger>\"","import { BloggerComponent } from './blogger/blogger.component';\nimport * as BloggersAction from './../../bloggers.actions';\nimport { BloggersService } from './../../services/bloggers.service';\nimport { Blogger } from './../../blogger'\nimport { Component, OnInit} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\n\n\n\n\n\n\n\n@Component({\n  selector: 'app-bloggers',\n  templateUrl: './bloggers.component.html',\n  styleUrls: ['./bloggers.component.css']\n})\nexport class BloggersComponent implements OnInit {\n   form:NgForm;\n\n  bloggersState:Observable<{ bloggers: Blogger[]}>;\n    \n\n  constructor(private bloggersService:BloggersService,\n              private store:Store<{bloggers:{ bloggers: Blogger[]}}>) { }\n\n  ngOnInit() {\n    \n    this.bloggersState = this.store.select('bloggers');\n    \n    \n  }\n\n     \n\n  addBlogger(form:NgForm) {\n    this.store.dispatch(new BloggersAction.AddBlogger(\n      new Blogger(form.value.name,form.value.email,form.value.about)));\n      this.bloggersState.subscribe(\n        (blog)=>\n        {\n          this.bloggersService.saveBlogger(blog.bloggers).subscribe();\n         \n        }\n      );\n      form.reset();\n  }\n\n  \n}\n","module.exports = \"body {\\r\\n    background: black;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nnavbar {\\r\\n    border-bottom: #008ed6 3px solid;\\r\\n    opacity: 0.8;\\r\\n}\\r\\n\\r\\n#home-section {\\r\\n    background: url('background.jpeg') no-repeat;\\r\\n    background-size: cover;\\r\\n    background-attachment: fixed;\\r\\n    min-height: 700px;\\r\\n}\\r\\n\\r\\n#home-section .dark-overlay {\\r\\n    background-color: rgba(0, 0, 0, 0.7);\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    min-height: 700px;\\r\\n}\\r\\n\\r\\n.info-header {\\r\\n    width: 50%;\\r\\n    margin: auto;\\r\\n    border-bottom: 1px #ddd solid;\\r\\n}\"","module.exports = \"<header id=\\\"home-section\\\">\\n    <div class=\\\"dark-overlay\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6 text-center mx-auto text-white\\\">\\n                    <h1 class=\\\"display-2 mt-5 pt-5\\\">\\n                        Find All About Our Bloggers\\n                    </h1>\\n                    <p class=\\\"lead\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum, quas.</p>\\n                    <a href=\\\"#bloggers\\\" class=\\\"btn btn-outline-secundary btn-lg text-white\\\">\\n                        <i class=\\\"fa fa-arrow-right\\\">Read More</i>\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</header>\\n<section id=\\\"bloggers\\\" class=\\\"my-5\\\">\\n    <div class=\\\"container\\\">\\n        <div clas=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"info-header mb-5 text-center\\\">\\n                    <h1 class=\\\"text-primary pb-3\\\">\\n                        Meet The Bloggers\\n                    </h1>\\n                    <p class=\\\"lead pb-3\\\">\\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Qui enim blanditiis nisi laboriosam corporis magni.\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <app-bloggers></app-bloggers>\\n</section>\"","import * as  BloggersAction from './../../bloggers.actions';\nimport { BloggersService } from '../../services/bloggers.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '../../../../node_modules/@ngrx/store';\nimport { Blogger} from '../../blogger';\n\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  blogger:Blogger;\n\n  constructor(private bloggersService:BloggersService,\n              private store:Store<{ bloggers: {bloggers:Blogger[] } }>) { }\n\n  ngOnInit() {\n    this.getAllBlogers();\n    \n    \n  }\n\n\ngetAllBlogers() {\n\nthis.bloggersService.getAllBloggers()\n    .subscribe(\n      (bloggers) => {\n      this.store.dispatch(new BloggersAction.AddBloggers(bloggers));\n      }\n    );\n  }\n\n}\n","module.exports = \"#home-section {\\r\\n    background: url('lost.jpg') no-repeat;\\r\\n    background-size: cover;\\r\\n    background-attachment: fixed;\\r\\n    min-height: 700px;\\r\\n}\\r\\n\\r\\n#home-section .dark-overlay {\\r\\n    background-color: rgba(0, 0, 0, 0.7);\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    min-height: 700px;\\r\\n}\\r\\n\\r\\n.info-header {\\r\\n    width: 50%;\\r\\n    margin: auto;\\r\\n    border-bottom: 1px #ddd solid;\\r\\n}\"","module.exports = \"<header id=\\\"home-section\\\">\\n    <div class=\\\"dark-overlay\\\">\\n    </div>\\n</header>\\n<section id=\\\"page-not-found\\\" class=\\\"my-5\\\">\\n    <div class=\\\"container\\\">\\n        <div clas=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"info-header mb-5 text-center\\\">\\n                    <h1 class=\\\"text-primary pb-3\\\">\\n                        Are you Lost???\\n                    </h1>\\n                    <p class=\\\"lead pb-3\\\">\\n                        Use the Navigation!!!\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</section>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"condition\\\" class=\\\"card m-3 bg-light mt-5\\\">\\n    <div class=\\\"card-header bg-dark text-white\\\">\\n        <h3>{{ post?.title | uppercase }} </h3>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <h3 class=\\\"text-muted\\\">{{ post?.category }}</h3>\\n    </div>\\n    <div class=\\\"card-footer text-dark\\\">\\n        <p>{{ post?.datePosted | date: 'HH:mm dd-MM-yyyy'}}</p>\\n    </div>\\n</div>\"","import { Observable } from 'rxjs';\nimport { PostService } from '../../services/post.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, Params, Route } from '@angular/router';\n\n\n\n\n\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\n\nexport class PostComponent implements OnInit {\n  post:{id:number,title:string,category:string,datePosted:string};\n  condition:boolean=true;\n\n  constructor(private postService:PostService,\n              private route:ActivatedRoute,\n              private router:Router) {}\n\n  ngOnInit () {\n\n    const id=this.route.snapshot.params['id'];\n\n    this.postService.getAllPosts()\n    .subscribe(\n      (posts)=>{\n        for (var index in posts){\n          if(posts[index].id==id){\n            this.post = posts[index];\n            this.condition=true;\n            break;\n          }\n        }\n      }\n    )\n    this.route.params\n    .subscribe(\n      (params:Params)=>{\n        const id = params['id'];\n        console.log(id);\n         this.postService.getAllPosts()\n        .subscribe(\n          (posts)=>{\n            for (var index in posts){\n              if(posts[index].id == id){\n                this.post=posts[index];\n                this.condition=true;\n                break;\n              }\n            }\n          }\n        )\n      }\n    )\n  }\n}","module.exports = \"#home-section {\\r\\n    background: url('posts.jpg') no-repeat;\\r\\n    background-size: cover;\\r\\n    background-attachment: fixed;\\r\\n    min-height: 350px;\\r\\n}\"","module.exports = \"<header id=\\\"home-section\\\">\\n    <div class=\\\"dark-overlay\\\">\\n    </div>\\n</header>\\n<div class=\\\"bg-light\\\">\\n    <div class=\\\"container my-4\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col md-6\\\">\\n                <div class=\\\"card m-3\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h4>Posts</h4>\\n                    </div>\\n                    <table class=\\\"table table-hover table-bordered text-center\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>#</th>\\n                                <th>Title</th>\\n                                <th>Deleting</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let post of posts;let i=index\\\" [@postAnim]>\\n                                <td>{{i+1}}</td>\\n                                <td [routerLink]=\\\"['/posts',post.id]\\\">{{ post.title }}</td>\\n                                <td>\\n                                    <button class=\\\"btn btn-danger btn-block\\\" (click)=\\\"deletePost(post.id)\\\">\\n          Delete Post\\n        </button>\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <router-outlet></router-outlet>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container my-4\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"info-header mb-5 text-center\\\">\\n                <h1 class=\\\"text-primary pb-3\\\">\\n                    Add New Post\\n                </h1>\\n                <p class=\\\"lead pb-3\\\">\\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsa reiciendis velit eum ea. Eum, eveniet?\\n                </p>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 bg-dark text-white mx-auto\\\">\\n            <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submit()\\\" class=\\\"my-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"title\\\">Title</label>\\n                    <input type=\\\"text\\\" id=\\\"title\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">\\n                    <span *ngIf=\\\"!addForm.get('title').valid && addForm.get('title').touched\\\">\\n            Enter the Title!\\n                    </span>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"category\\\">Category</label>\\n                    <input type=\\\"text\\\" id=\\\"category\\\" formControlName=\\\"category\\\" class=\\\"form-control\\\">\\n                    <span *ngIf=\\\"!addForm.get('category').valid && addForm.get('category').touched\\\">\\n                    Enter Category!\\n                    </span>\\n                </div>\\n\\n                <br>\\n                <button class=\\\"btn btn-outline-secondary btn-block\\\" type=\\\"submit\\\">Save</button>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { trigger, state, animate, style, keyframes, transition } from '@angular/animations';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Component, OnInit } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { FormGroup, Validators, FormControl } from '../../../../node_modules/@angular/forms';\n\n\n\n\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css'],\n  animations:[\n    trigger('postAnim',[\n      state('insert',style({\n        opacity:1,\n        transform:'translatex(0)'\n\n      })),\n    transition('void=> *',[\n      animate(1300,keyframes([\n        style({\n          opacity:0,\n          transform:'translate(-100px)',\n          offset:0\n        }),\n        style({\n          opacity:0.5,\n          transform:'translate(-70px)',\n          offset:0.3\n        }),\n        style({\n          opacity:0.8,\n          transform:'translate(-40px)',\n          offset:0.8\n        }),\n        style({\n          opacity:1,\n          transform:'translate(0)',\n          offset:1\n        })\n      ]))\n    ]),\n    transition('*=>void',[\n      animate(900,style({\n        opacity:0,\n        transform:'translate(100px)'\n      }))\n    ])\n  ])\n  ]\n})\nexport class PostsComponent implements OnInit {\n \n  posts:{id:number,title:string,category:string,datePosted:any}[]=[];\n  addForm:FormGroup;\n  private date;\n\n  constructor(private postService:PostService) {\n    this.date=new Date();\n    setInterval(() =>{\n      this.date=new Date();\n    },1000);\n   }\n\n  ngOnInit() {\n    this.addForm=new FormGroup({\n      'title':new FormControl(null,Validators.required),\n      'category':new FormControl(null,[Validators.required]),\n      'date':new FormControl(null,[Validators.required])\n    });\n    this.postService.getAllPosts()\n    .subscribe(\n      (posts)=>{\n        this.posts=posts;\n      }\n\n    )\n    \n  }\n  deletePost(id:number) {\n    this.posts=this.posts.filter(posts=>posts.id !=id);\n    this.postService.savePosts(this.posts)\n    .subscribe();\n  }\n\n\n\n  \n\n  submit(){\n    \n    \n    const newPost={\n      \n      id:(this.posts===null ? 0 : this.posts.length+1),title:this.addForm.value.title,\n      category:this.addForm.value.category,datePosted:this.date\n    };\n    this.posts = this.posts || [];\n    this.posts.push(newPost);\n    this.postService.savePosts(this.posts)\n    .subscribe();\n    this.addForm.reset();\n  }\n}\n\n\n","module.exports = \"#home-section {\\r\\n    background: url('welcome.jpg') no-repeat;\\r\\n    background-size: cover;\\r\\n    background-attachment: fixed;\\r\\n    min-height: 700px;\\r\\n}\\r\\n\\r\\n#home-section .dark-overlay {\\r\\n    background-color: rgba(0, 0, 0, 0.7);\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    min-height: 700px;\\r\\n}\\r\\n\\r\\n.home-inner {\\r\\n    padding-top: 150px;\\r\\n}\\r\\n\\r\\n.card-form {\\r\\n    opacity: 0.8;\\r\\n}\"","module.exports = \"<header id=\\\"home-section\\\">\\n    <div class=\\\"dark-overlay\\\">\\n        <div class=\\\"container home-inner\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8 d-none d-md-block text-light\\\">\\n                    <h1 class=\\\"display-4\\\">\\n                        <strong>Sign In</strong>\\n                    </h1>\\n                    <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Beatae id commodi quisquam soluta ad nesciunt accusamus magnam cum nihil enim!</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"card bg-success text-center card-form\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <form (ngSubmit)=\\\"signin(f)\\\" #f=\\\"ngForm\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <input type=\\\"text\\\" placeholder=\\\"User Name\\\" id=\\\"name\\\" name=\\\"name\\\" ngModel class=\\\"form-control form-control-lg\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <input type=\\\"email\\\" placeholder=\\\"Email\\\" id=\\\"email\\\" name=\\\"email\\\" ngModel class=\\\"form-control form-control-lg\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <input type=\\\"password\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" name=\\\"password\\\" ngModel class=\\\"form-control form-control-lg\\\">\\n                                </div>\\n                                <button class=\\\"btn btn-outline-light btn-block\\\" type=\\\"submit\\\">Sign In</button>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</header>\"","import { NgForm } from '@angular/forms';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  constructor(private authService:AuthService) { }\n\n  ngOnInit() {\n  }\n  \n   signin(form:NgForm){\n     const email = form.value.email;\n     const password= form.value.password;\n     this.authService.signinUser(email,password);\n\n   }\n}\n","module.exports = \"#home-section {\\r\\n    background: url('welcome.jpg') no-repeat;\\r\\n    background-size: cover;\\r\\n    background-attachment: fixed;\\r\\n    min-height: 700px;\\r\\n}\\r\\n\\r\\n#home-section .dark-overlay {\\r\\n    background-color: rgba(0, 0, 0, 0.7);\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    min-height: 700px;\\r\\n}\\r\\n\\r\\n.home-inner {\\r\\n    padding-top: 150px;\\r\\n}\\r\\n\\r\\n.card-form {\\r\\n    opacity: 0.8;\\r\\n}\"","module.exports = \"<header id=\\\"home-section\\\">\\n    <div class=\\\"dark-overlay\\\">\\n        <div class=\\\"container home-inner\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8 d-none d-md-block text-light\\\">\\n                    <h1 class=\\\"display-4\\\">\\n                        <strong>Sign Up</strong>\\n                    </h1>\\n                    <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Beatae id commodi quisquam soluta ad nesciunt accusamus magnam cum nihil enim!</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"card bg-warning text-center card-form\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <form (ngSubmit)=\\\"signup(f)\\\" #f=\\\"ngForm\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <input type=\\\"text\\\" placeholder=\\\"User Name\\\" id=\\\"name\\\" name=\\\"name\\\" ngModel class=\\\"form-control form-control-lg\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <input type=\\\"email\\\" placeholder=\\\"Email\\\" id=\\\"email\\\" name=\\\"email\\\" ngModel class=\\\"form-control form-control-lg\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <input type=\\\"password\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" name=\\\"password\\\" ngModel class=\\\"form-control form-control-lg\\\">\\n                                </div>\\n                                <button class=\\\"btn btn-outline-light btn-block\\\" type=\\\"submit\\\">Sign Up</button>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</header>\"","import { NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(private authService:AuthService) { }\n\n  ngOnInit() {\n  }\n  \n   signup(form:NgForm){\n     const email = form.value.email;\n     const password= form.value.password;\n     this.authService.signupUser(email,password);\n\n   }\n}","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport * as firebase from 'firebase';\n\n\n@Injectable()\nexport class AuthService {\n\n   token:string;\n\n  constructor(private router:Router) { }\n\n  signinUser(email:string,password:string){\n    firebase.auth().signInWithEmailAndPassword(email,password)\n    .then(\n      (response) => {\n        this.router.navigate(['/']);\n        firebase.auth().currentUser.getIdToken()\n        .then (\n          (token:string) => this.token = token\n        )\n      }\n    )\n    .catch (\n      (error) => console.log(error)\n    )\n  }\n\n  getToken() {\n    firebase.auth().currentUser.getIdToken()\n    .then (\n      (token:string) => this.token = token\n    )\n    return this.token;\n  }\n\n  signupUser(email:string,password:string){\n    firebase.auth().createUserWithEmailAndPassword(email,password)\n    .catch (\n      (error)=>console.log(error)\n    )\n  }\n\n  authenticated() {\n    return this.token !=null;\n  } \n\n  signout() {\n    firebase.auth().signOut();\n    this.token=null;\n  }\n}\n","import { AuthService } from '../services/auth.service';\nimport { Blogger } from './../blogger';\nimport { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\n\n\n\n@Injectable()\n\nexport class BloggersService {\n  \n\n  constructor(private http:HttpClient,\n              private authService:AuthService) { }\n\n headers = new HttpHeaders().set('Content-Type','application/json');\n \n  getAllBloggers() {\n    const token = this.authService.getToken();\n    return this.http.get<Blogger[]>('https://bloggers-4a18e.firebaseio.com/bloggers.json?auth='+token,{\n           headers:this.headers\n  });\n \n }\n\n saveBlogger(bloggers) {\n  const token = this.authService.getToken();\n  return this.http.put('https://bloggers-4a18e.firebaseio.com/bloggers.json?auth='+token,bloggers,{\n    headers:this.headers\n  });\n }\n}\n","import { AuthService } from '../services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate,ActivatedRouteSnapshot,RouterStateSnapshot } from '@angular/router';\n\n\n@Injectable()\nexport class GuardService implements CanActivate {\n\n  constructor (private authService:AuthService) { }\n\n  canActivate(route:ActivatedRouteSnapshot,state:RouterStateSnapshot){\n    return this.authService.authenticated();\n  }\n}\n","import { AuthService } from '../services/auth.service';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n\n\n\n@Injectable()\nexport class PostService {\n\n  constructor(private http:HttpClient,\n              private authService:AuthService) { }\n\nheaders=new HttpHeaders().set('Content-Type','application/json');\n\n\ngetAllPosts(){\n  const token = this.authService.getToken();\n  return this.http.get<any[]>('https://bloggers-4a18e.firebaseio.com/posts.json?auth='+token,{\n           headers:this.headers\n             });\n \n  }\n\n  savePosts(posts){\n    const token = this.authService.getToken();\n    return this.http.put('https://bloggers-4a18e.firebaseio.com/posts.json?auth='+token,posts, {\n      headers:this.headers\n    });\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}